library(shiny)
library(data.table)
library(ggplot2)
library(dplyr)
library(tidyr)
# Data import
df <- fread ('https://zenodo.org/record/3891055/files/plos_contribution_data_set.csv?download=1',
select = c("wrote_paper", "analyzed_data", "conceived_experiments", "contributed_tools", "performed_experiments", "p_age"))
# Data ordering by age
dfOrdByAge <- df[order(df[,6]),]
# Data addition by age
dfAddByAge <- aggregate(cbind(wrote_paper, analyzed_data, conceived_experiments, contributed_tools, performed_experiments) ~ p_age,
data = dfOrdByAge, FUN = sum)
# Data cleaning
dfByAgeClean <- dfAddByAge[-c(1, 50, 51, 52),]
# User interface
ui <- fluidPage(
titlePanel("Contributions Dashboard"),
sidebarLayout(
sidebarPanel(
h5("Academic age"),
sliderInput("age", label = "Academic age", min = 1, max = 25, value = c(10, 15)),
h5("Contribution type"),
checkboxInput("contribution_WR", label = "Wrote paper", value = TRUE),
checkboxInput("contribution_AD", label = "Analyzed data", value = TRUE),
checkboxInput("contribution_CE", label = "Conceived experiments", value = TRUE),
checkboxInput("contribution_CT", label = "Contributed tools", value = TRUE),
checkboxInput("contribution_PE", label = "Performed experiments", value = TRUE)),
mainPanel(
plotOutput("contributionByAge")
)
)
)
# Server logic
server <- function(input, output) {
output$contributionByAge <- renderPlot({
gather(data = dfByAgeClean[which(dfByAgeClean$p_age >= input$age[1] & dfByAgeClean$p_age <= input$age[2]),], key, value, wrote_paper, analyzed_data, conceived_experiments, contributed_tools, performed_experiments) %>%
{if (!input$contribution_WR) filter(., key!='wrote_paper') else filter(.)} %>%
{if (!input$contribution_AD) filter(., key!='analyzed_data') else filter(.)} %>%
{if (!input$contribution_CE) filter(., key!='conceived_experiments') else filter(.)} %>%
{if (!input$contribution_CT) filter(., key!='contributed_tools') else filter(.)} %>%
{if (!input$contribution_PE) filter(., key!='performed_experiments') else filter(.)} %>%
ggplot(aes(x = p_age, y = value, colour = key)) +
geom_line()
})
}
# App run
shinyApp(ui = ui, server = server)
View(dfByAgeClean)
View(df)
# User interface
ui <- fluidPage(
titlePanel("Contributions Dashboard"),
sidebarLayout(
sidebarPanel(
h5("Academic age"),
sliderInput("age", label = "Academic age", min = 1, max = 25, value = c(10, 15)),
h5("Contribution type"),
checkboxInput("contribution_WR", label = "Wrote paper", value = TRUE),
checkboxInput("contribution_AD", label = "Analyzed data", value = TRUE),
checkboxInput("contribution_CE", label = "Conceived experiments", value = TRUE),
checkboxInput("contribution_CT", label = "Contributed tools", value = TRUE),
checkboxInput("contribution_PE", label = "Performed experiments", value = TRUE)),
mainPanel(
plotOutput("contributionByAge")
)
)
)
# Server logic
server <- function(input, output) {
output$contributionByAge <- renderPlot({
gather(data = dfByAgeClean[which(dfByAgeClean$p_age >= input$age[1] & dfByAgeClean$p_age <= input$age[2]),], key, value, wrote_paper, analyzed_data, conceived_experiments, contributed_tools, performed_experiments) %>%
{if (!input$contribution_WR) filter(., key!='wrote_paper') else filter(.)} %>%
{if (!input$contribution_AD) filter(., key!='analyzed_data') else filter(.)} %>%
{if (!input$contribution_CE) filter(., key!='conceived_experiments') else filter(.)} %>%
{if (!input$contribution_CT) filter(., key!='contributed_tools') else filter(.)} %>%
{if (!input$contribution_PE) filter(., key!='performed_experiments') else filter(.)} %>%
ggplot(aes(x = p_age, y = value, colour = key)) +
geom_line()
})
}
# App run
shinyApp(ui = ui, server = server)
# Data import
df <- fread ('https://zenodo.org/record/3891055/files/plos_contribution_data_set.csv?download=1',
select = c("wrote_paper", "analyzed_data", "conceived_experiments", "contributed_tools", "performed_experiments", "p_age", "au_count", "n_authors"))
# Data ordering by age
dfOrdByAge <- df[order(df[,6]),]
# Data addition by age
dfAddByAge <- aggregate(cbind(wrote_paper, analyzed_data, conceived_experiments, contributed_tools, performed_experiments, au_count) ~ p_age,
data = dfOrdByAge, FUN = sum)
# Data cleaning
dfByAgeClean <- dfAddByAge[-c(1, 50, 51, 52),]
